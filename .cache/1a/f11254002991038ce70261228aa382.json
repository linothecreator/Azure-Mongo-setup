{"id":"../node_modules/@azure/core-lro/dist-esm/src/poller.js","dependencies":[{"name":"C:\\Users\\rodne\\azuremongotut\\node_modules\\@azure\\core-lro\\dist-esm\\src\\poller.js.map","includedInParent":true,"mtime":1656031343803},{"name":"C:\\Users\\rodne\\azuremongotut\\package.json","includedInParent":true,"mtime":1657925171107},{"name":"C:\\Users\\rodne\\azuremongotut\\node_modules\\@azure\\core-lro\\package.json","includedInParent":true,"mtime":1656031343459}],"generated":{"js":"var define;\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PollerStoppedError = exports.PollerCancelledError = exports.Poller = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nvar PollerStoppedError = /*#__PURE__*/function (_Error) {\n  _inherits(PollerStoppedError, _Error);\n\n  var _super = _createSuper(PollerStoppedError);\n\n  function PollerStoppedError(message) {\n    var _this;\n\n    _classCallCheck(this, PollerStoppedError);\n\n    _this = _super.call(this, message);\n    _this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(_assertThisInitialized(_this), PollerStoppedError.prototype);\n    return _this;\n  }\n\n  return _createClass(PollerStoppedError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * When a poller is cancelled through the `cancelOperation` method,\n * the poller will be rejected with an instance of the PollerCancelledError.\n */\n\n\nexports.PollerStoppedError = PollerStoppedError;\n\nvar PollerCancelledError = /*#__PURE__*/function (_Error2) {\n  _inherits(PollerCancelledError, _Error2);\n\n  var _super2 = _createSuper(PollerCancelledError);\n\n  function PollerCancelledError(message) {\n    var _this2;\n\n    _classCallCheck(this, PollerCancelledError);\n\n    _this2 = _super2.call(this, message);\n    _this2.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(_assertThisInitialized(_this2), PollerCancelledError.prototype);\n    return _this2;\n  }\n\n  return _createClass(PollerCancelledError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\n\n\nexports.PollerCancelledError = PollerCancelledError;\n\nvar Poller = /*#__PURE__*/function () {\n  /**\n   * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n   *\n   * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n   * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n   * operation has already been defined, at least its basic properties. The code below shows how to approach\n   * the definition of the constructor of a new custom poller.\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor({\n   *     // Anything you might need outside of the basics\n   *   }) {\n   *     let state: MyOperationState = {\n   *       privateProperty: private,\n   *       publicProperty: public,\n   *     };\n   *\n   *     const operation = {\n   *       state,\n   *       update,\n   *       cancel,\n   *       toString\n   *     }\n   *\n   *     // Sending the operation to the parent's constructor.\n   *     super(operation);\n   *\n   *     // You can assign more local properties here.\n   *   }\n   * }\n   * ```\n   *\n   * Inside of this constructor, a new promise is created. This will be used to\n   * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n   * resolve and reject methods are also used internally to control when to resolve\n   * or reject anyone waiting for the poller to finish.\n   *\n   * The constructor of a custom implementation of a poller is where any serialized version of\n   * a previous poller's operation should be deserialized into the operation sent to the\n   * base constructor. For example:\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor(\n   *     baseOperation: string | undefined\n   *   ) {\n   *     let state: MyOperationState = {};\n   *     if (baseOperation) {\n   *       state = {\n   *         ...JSON.parse(baseOperation).state,\n   *         ...state\n   *       };\n   *     }\n   *     const operation = {\n   *       state,\n   *       // ...\n   *     }\n   *     super(operation);\n   *   }\n   * }\n   * ```\n   *\n   * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n   */\n  function Poller(operation) {\n    var _this3 = this;\n\n    _classCallCheck(this, Poller);\n\n    this.stopped = true;\n    this.pollProgressCallbacks = [];\n    this.operation = operation;\n    this.promise = new Promise(function (resolve, reject) {\n      _this3.resolve = resolve;\n      _this3.reject = reject;\n    }); // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n\n    this.promise.catch(function () {\n      /* intentionally blank */\n    });\n  }\n  /**\n   * Starts a loop that will break only if the poller is done\n   * or if the poller is stopped.\n   */\n\n\n  _createClass(Poller, [{\n    key: \"startPolling\",\n    value: function () {\n      var _startPolling = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.stopped) {\n                  this.stopped = false;\n                }\n\n              case 1:\n                if (!(!this.isStopped() && !this.isDone())) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 4;\n                return this.poll();\n\n              case 4:\n                _context.next = 6;\n                return this.delay();\n\n              case 6:\n                _context.next = 1;\n                break;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function startPolling() {\n        return _startPolling.apply(this, arguments);\n      }\n\n      return startPolling;\n    }()\n    /**\n     * pollOnce does one polling, by calling to the update method of the underlying\n     * poll operation to make any relevant change effective.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n\n  }, {\n    key: \"pollOnce\",\n    value: function () {\n      var _pollOnce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var options,\n            _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n                _context2.prev = 1;\n\n                if (this.isDone()) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 5;\n                return this.operation.update({\n                  abortSignal: options.abortSignal,\n                  fireProgress: this.fireProgress.bind(this)\n                });\n\n              case 5:\n                this.operation = _context2.sent;\n\n                if (this.isDone() && this.resolve) {\n                  // If the poller has finished polling, this means we now have a result.\n                  // However, it can be the case that TResult is instantiated to void, so\n                  // we are not expecting a result anyway. To assert that we might not\n                  // have a result eventually after finishing polling, we cast the result\n                  // to TResult.\n                  this.resolve(this.operation.state.result);\n                }\n\n              case 7:\n                _context2.next = 14;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                this.operation.state.error = _context2.t0;\n\n                if (this.reject) {\n                  this.reject(_context2.t0);\n                }\n\n                throw _context2.t0;\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n\n      function pollOnce() {\n        return _pollOnce.apply(this, arguments);\n      }\n\n      return pollOnce;\n    }()\n    /**\n     * fireProgress calls the functions passed in via onProgress the method of the poller.\n     *\n     * It loops over all of the callbacks received from onProgress, and executes them, sending them\n     * the current operation state.\n     *\n     * @param state - The current operation state.\n     */\n\n  }, {\n    key: \"fireProgress\",\n    value: function fireProgress(state) {\n      var _iterator = _createForOfIteratorHelper(this.pollProgressCallbacks),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var callback = _step.value;\n          callback(state);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    /**\n     * Invokes the underlying operation's cancel method, and rejects the\n     * pollUntilDone promise.\n     */\n\n  }, {\n    key: \"cancelOnce\",\n    value: function () {\n      var _cancelOnce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var options,\n            _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n                _context3.next = 3;\n                return this.operation.cancel(options);\n\n              case 3:\n                this.operation = _context3.sent;\n\n                if (this.reject) {\n                  this.reject(new PollerCancelledError(\"Poller cancelled\"));\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function cancelOnce() {\n        return _cancelOnce.apply(this, arguments);\n      }\n\n      return cancelOnce;\n    }()\n    /**\n     * Returns a promise that will resolve once a single polling request finishes.\n     * It does this by calling the update method of the Poller's operation.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      var _this4 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.pollOncePromise) {\n        this.pollOncePromise = this.pollOnce(options);\n\n        var clearPollOncePromise = function clearPollOncePromise() {\n          _this4.pollOncePromise = undefined;\n        };\n\n        this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n      }\n\n      return this.pollOncePromise;\n    }\n    /**\n     * Returns a promise that will resolve once the underlying operation is completed.\n     */\n\n  }, {\n    key: \"pollUntilDone\",\n    value: function () {\n      var _pollUntilDone = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.stopped) {\n                  this.startPolling().catch(this.reject);\n                }\n\n                return _context4.abrupt(\"return\", this.promise);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function pollUntilDone() {\n        return _pollUntilDone.apply(this, arguments);\n      }\n\n      return pollUntilDone;\n    }()\n    /**\n     * Invokes the provided callback after each polling is completed,\n     * sending the current state of the poller's operation.\n     *\n     * It returns a method that can be used to stop receiving updates on the given callback function.\n     */\n\n  }, {\n    key: \"onProgress\",\n    value: function onProgress(callback) {\n      var _this5 = this;\n\n      this.pollProgressCallbacks.push(callback);\n      return function () {\n        _this5.pollProgressCallbacks = _this5.pollProgressCallbacks.filter(function (c) {\n          return c !== callback;\n        });\n      };\n    }\n    /**\n     * Returns true if the poller has finished polling.\n     */\n\n  }, {\n    key: \"isDone\",\n    value: function isDone() {\n      var state = this.operation.state;\n      return Boolean(state.isCompleted || state.isCancelled || state.error);\n    }\n    /**\n     * Stops the poller from continuing to poll.\n     */\n\n  }, {\n    key: \"stopPolling\",\n    value: function stopPolling() {\n      if (!this.stopped) {\n        this.stopped = true;\n\n        if (this.reject) {\n          this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n        }\n      }\n    }\n    /**\n     * Returns true if the poller is stopped.\n     */\n\n  }, {\n    key: \"isStopped\",\n    value: function isStopped() {\n      return this.stopped;\n    }\n    /**\n     * Attempts to cancel the underlying operation.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * If it's called again before it finishes, it will throw an error.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n\n  }, {\n    key: \"cancelOperation\",\n    value: function cancelOperation() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.stopped) {\n        this.stopped = true;\n      }\n\n      if (!this.cancelPromise) {\n        this.cancelPromise = this.cancelOnce(options);\n      } else if (options.abortSignal) {\n        throw new Error(\"A cancel request is currently pending\");\n      }\n\n      return this.cancelPromise;\n    }\n    /**\n     * Returns the state of the operation.\n     *\n     * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n     * implementations of the pollers can customize what's shared with the public by writing their own\n     * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n     * and a public type representing a safe to share subset of the properties of the internal state.\n     * Their definition of getOperationState can then return their public type.\n     *\n     * Example:\n     *\n     * ```ts\n     * // Let's say we have our poller's operation state defined as:\n     * interface MyOperationState extends PollOperationState<ResultType> {\n     *   privateProperty?: string;\n     *   publicProperty?: string;\n     * }\n     *\n     * // To allow us to have a true separation of public and private state, we have to define another interface:\n     * interface PublicState extends PollOperationState<ResultType> {\n     *   publicProperty?: string;\n     * }\n     *\n     * // Then, we define our Poller as follows:\n     * export class MyPoller extends Poller<MyOperationState, ResultType> {\n     *   // ... More content is needed here ...\n     *\n     *   public getOperationState(): PublicState {\n     *     const state: PublicState = this.operation.state;\n     *     return {\n     *       // Properties from PollOperationState<TResult>\n     *       isStarted: state.isStarted,\n     *       isCompleted: state.isCompleted,\n     *       isCancelled: state.isCancelled,\n     *       error: state.error,\n     *       result: state.result,\n     *\n     *       // The only other property needed by PublicState.\n     *       publicProperty: state.publicProperty\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * You can see this in the tests of this repository, go to the file:\n     * `../test/utils/testPoller.ts`\n     * and look for the getOperationState implementation.\n     */\n\n  }, {\n    key: \"getOperationState\",\n    value: function getOperationState() {\n      return this.operation.state;\n    }\n    /**\n     * Returns the result value of the operation,\n     * regardless of the state of the poller.\n     * It can return undefined or an incomplete form of the final TResult value\n     * depending on the implementation.\n     */\n\n  }, {\n    key: \"getResult\",\n    value: function getResult() {\n      var state = this.operation.state;\n      return state.result;\n    }\n    /**\n     * Returns a serialized version of the poller's operation\n     * by invoking the operation's toString method.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.operation.toString();\n    }\n  }]);\n\n  return Poller;\n}();\n\nexports.Poller = Poller;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/poller.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":17,"column":47}},{"source":"../../src/poller.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":49,"column":0}},{"source":"../../src/poller.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":50,"column":0}},{"source":"../../src/poller.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":52,"column":0}},{"source":"../../src/poller.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":56,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":61,"column":2}},{"source":"../../src/poller.ts","name":null,"original":{"line":27,"column":14},"generated":{"line":61,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":61,"column":37}},{"source":"../../src/poller.ts","name":null,"original":{"line":27,"column":29},"generated":{"line":61,"column":39}},{"source":"../../src/poller.ts","name":null,"original":{"line":27,"column":29},"generated":{"line":62,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":27,"column":29},"generated":{"line":64,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":66,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":28,"column":10},"generated":{"line":66,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":66,"column":37}},{"source":"../../src/poller.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":67,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":29,"column":9},"generated":{"line":67,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":67,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":29,"column":16},"generated":{"line":67,"column":17}},{"source":"../../src/poller.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":67,"column":37}},{"source":"../../src/poller.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":68,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":68,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":68,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":68,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":30,"column":32},"generated":{"line":68,"column":57}},{"source":"../../src/poller.ts","name":null,"original":{"line":30,"column":50},"generated":{"line":68,"column":75}},{"source":"../../src/poller.ts","name":null,"original":{"line":30,"column":51},"generated":{"line":68,"column":76}},{"source":"../../src/poller.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":68,"column":85}},{"source":"../../src/poller.ts","name":null,"original":{"line":27,"column":29},"generated":{"line":69,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":31,"column":3},"generated":{"line":70,"column":2}},{"source":"../../src/poller.ts","name":null,"original":{"line":26,"column":40},"generated":{"line":73,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":74,"column":0}},{"source":"../../src/poller.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":82,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":87,"column":2}},{"source":"../../src/poller.ts","name":null,"original":{"line":39,"column":14},"generated":{"line":87,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":87,"column":39}},{"source":"../../src/poller.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":87,"column":41}},{"source":"../../src/poller.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":88,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":90,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":92,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":40,"column":10},"generated":{"line":92,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":92,"column":39}},{"source":"../../src/poller.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":93,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":93,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":93,"column":15}},{"source":"../../src/poller.ts","name":null,"original":{"line":41,"column":16},"generated":{"line":93,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":93,"column":40}},{"source":"../../src/poller.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":94,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":94,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":42,"column":11},"generated":{"line":94,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":94,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":42,"column":32},"generated":{"line":94,"column":58}},{"source":"../../src/poller.ts","name":null,"original":{"line":42,"column":52},"generated":{"line":94,"column":78}},{"source":"../../src/poller.ts","name":null,"original":{"line":42,"column":53},"generated":{"line":94,"column":79}},{"source":"../../src/poller.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":94,"column":88}},{"source":"../../src/poller.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":95,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":43,"column":3},"generated":{"line":96,"column":2}},{"source":"../../src/poller.ts","name":null,"original":{"line":38,"column":42},"generated":{"line":99,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":103,"column":0},"generated":{"line":100,"column":0}},{"source":"../../src/poller.ts","name":null,"original":{"line":164,"column":0},"generated":{"line":161,"column":0}},{"source":"../../src/poller.ts","name":null,"original":{"line":165,"column":22},"generated":{"line":166,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":182,"column":2},"generated":{"line":167,"column":2}},{"source":"../../src/poller.ts","name":null,"original":{"line":247,"column":2},"generated":{"line":232,"column":2}},{"source":"../../src/poller.ts","name":null,"original":{"line":247,"column":14},"generated":{"line":232,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":247,"column":2},"generated":{"line":232,"column":27}},{"source":"../../src/poller.ts","name":null,"original":{"line":247,"column":55},"generated":{"line":232,"column":29}},{"source":"../../src/poller.ts","name":null,"original":{"line":247,"column":55},"generated":{"line":233,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":247,"column":55},"generated":{"line":235,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":168,"column":10},"generated":{"line":237,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":168,"column":10},"generated":{"line":237,"column":9}},{"source":"../../src/poller.ts","name":null,"original":{"line":168,"column":10},"generated":{"line":237,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":168,"column":29},"generated":{"line":237,"column":19}},{"source":"../../src/poller.ts","name":null,"original":{"line":168,"column":10},"generated":{"line":237,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":174,"column":10},"generated":{"line":238,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":174,"column":10},"generated":{"line":238,"column":9}},{"source":"../../src/poller.ts","name":null,"original":{"line":174,"column":10},"generated":{"line":238,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":174,"column":66},"generated":{"line":238,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":174,"column":10},"generated":{"line":238,"column":35}},{"source":"../../src/poller.ts","name":null,"original":{"line":248,"column":4},"generated":{"line":239,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":248,"column":9},"generated":{"line":239,"column":9}},{"source":"../../src/poller.ts","name":null,"original":{"line":248,"column":4},"generated":{"line":239,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":248,"column":21},"generated":{"line":239,"column":21}},{"source":"../../src/poller.ts","name":null,"original":{"line":248,"column":4},"generated":{"line":239,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":249,"column":4},"generated":{"line":240,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":249,"column":9},"generated":{"line":240,"column":9}},{"source":"../../src/poller.ts","name":null,"original":{"line":249,"column":4},"generated":{"line":240,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":249,"column":19},"generated":{"line":240,"column":19}},{"source":"../../src/poller.ts","name":null,"original":{"line":249,"column":23},"generated":{"line":240,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":249,"column":19},"generated":{"line":240,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":250,"column":6},"generated":{"line":240,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":251,"column":8},"generated":{"line":240,"column":41}},{"source":"../../src/poller.ts","name":null,"original":{"line":250,"column":6},"generated":{"line":240,"column":48}},{"source":"../../src/poller.ts","name":null,"original":{"line":252,"column":8},"generated":{"line":240,"column":50}},{"source":"../../src/poller.ts","name":null,"original":{"line":250,"column":6},"generated":{"line":240,"column":56}},{"source":"../../src/poller.ts","name":null,"original":{"line":253,"column":10},"generated":{"line":240,"column":58}},{"source":"../../src/poller.ts","name":null,"original":{"line":254,"column":8},"generated":{"line":241,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":254,"column":12},"generated":{"line":241,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":254,"column":13},"generated":{"line":241,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":254,"column":8},"generated":{"line":241,"column":20}},{"source":"../../src/poller.ts","name":null,"original":{"line":254,"column":23},"generated":{"line":241,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":254,"column":8},"generated":{"line":241,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":255,"column":8},"generated":{"line":242,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":255,"column":12},"generated":{"line":242,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":255,"column":13},"generated":{"line":242,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":255,"column":8},"generated":{"line":242,"column":19}},{"source":"../../src/poller.ts","name":null,"original":{"line":255,"column":22},"generated":{"line":242,"column":22}},{"source":"../../src/poller.ts","name":null,"original":{"line":255,"column":8},"generated":{"line":242,"column":28}},{"source":"../../src/poller.ts","name":null,"original":{"line":256,"column":7},"generated":{"line":243,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":249,"column":19},"generated":{"line":243,"column":5}},{"source":"../../src/poller.ts","name":null,"original":{"line":249,"column":4},"generated":{"line":243,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":247,"column":55},"generated":{"line":243,"column":7}},{"source":"../../src/poller.ts","name":null,"original":{"line":258,"column":4},"generated":{"line":243,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":259,"column":4},"generated":{"line":244,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":260,"column":4},"generated":{"line":245,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":261,"column":4},"generated":{"line":247,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":261,"column":9},"generated":{"line":247,"column":9}},{"source":"../../src/poller.ts","name":null,"original":{"line":261,"column":4},"generated":{"line":247,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":261,"column":17},"generated":{"line":247,"column":17}},{"source":"../../src/poller.ts","name":null,"original":{"line":261,"column":4},"generated":{"line":247,"column":22}},{"source":"../../src/poller.ts","name":null,"original":{"line":261,"column":23},"generated":{"line":247,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":261,"column":28},"generated":{"line":247,"column":35}},{"source":"../../src/poller.ts","name":null,"original":{"line":262,"column":6},"generated":{"line":248,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":263,"column":5},"generated":{"line":249,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":261,"column":4},"generated":{"line":249,"column":5}},{"source":"../../src/poller.ts","name":null,"original":{"line":264,"column":3},"generated":{"line":250,"column":2}},{"source":"../../src/poller.ts","name":null,"original":{"line":289,"column":2},"generated":{"line":251,"column":2}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":260,"column":85}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":261,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":262,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":263,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":264,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":294,"column":4},"generated":{"line":265,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":294,"column":8},"generated":{"line":265,"column":20}},{"source":"../../src/poller.ts","name":null,"original":{"line":294,"column":13},"generated":{"line":265,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":294,"column":4},"generated":{"line":265,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":294,"column":22},"generated":{"line":265,"column":34}},{"source":"../../src/poller.ts","name":null,"original":{"line":295,"column":6},"generated":{"line":266,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":295,"column":11},"generated":{"line":266,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":295,"column":6},"generated":{"line":266,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":295,"column":21},"generated":{"line":266,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":295,"column":6},"generated":{"line":266,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":296,"column":5},"generated":{"line":267,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":269,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":270,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":297,"column":11},"generated":{"line":270,"column":22}},{"source":"../../src/poller.ts","name":null,"original":{"line":297,"column":12},"generated":{"line":270,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":297,"column":17},"generated":{"line":270,"column":28}},{"source":"../../src/poller.ts","name":null,"original":{"line":297,"column":12},"generated":{"line":270,"column":37}},{"source":"../../src/poller.ts","name":null,"original":{"line":297,"column":11},"generated":{"line":270,"column":39}},{"source":"../../src/poller.ts","name":null,"original":{"line":297,"column":32},"generated":{"line":270,"column":43}},{"source":"../../src/poller.ts","name":null,"original":{"line":297,"column":33},"generated":{"line":270,"column":44}},{"source":"../../src/poller.ts","name":null,"original":{"line":297,"column":38},"generated":{"line":270,"column":49}},{"source":"../../src/poller.ts","name":null,"original":{"line":297,"column":33},"generated":{"line":270,"column":55}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":270,"column":57}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":271,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":272,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":273,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":275,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":276,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":298,"column":12},"generated":{"line":276,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":298,"column":17},"generated":{"line":276,"column":28}},{"source":"../../src/poller.ts","name":null,"original":{"line":298,"column":12},"generated":{"line":276,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":276,"column":34}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":278,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":279,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":280,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":299,"column":12},"generated":{"line":280,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":299,"column":17},"generated":{"line":280,"column":28}},{"source":"../../src/poller.ts","name":null,"original":{"line":299,"column":12},"generated":{"line":280,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":280,"column":35}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":282,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":283,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":284,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":286,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":287,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":288,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":289,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":290,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":291,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":293,"column":10},"generated":{"line":292,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":303,"column":2},"generated":{"line":300,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":312,"column":81}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":313,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":314,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":315,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":316,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":317,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":318,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":25},"generated":{"line":319,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":319,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":70},"generated":{"line":319,"column":85}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":319,"column":87}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":320,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":322,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":313,"column":11},"generated":{"line":322,"column":20}},{"source":"../../src/poller.ts","name":null,"original":{"line":313,"column":16},"generated":{"line":322,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":313,"column":11},"generated":{"line":322,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":322,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":323,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":324,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":325,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":327,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":328,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":31},"generated":{"line":328,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":36},"generated":{"line":328,"column":28}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":31},"generated":{"line":328,"column":37}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":46},"generated":{"line":328,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":31},"generated":{"line":328,"column":44}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":53},"generated":{"line":328,"column":45}},{"source":"../../src/poller.ts","name":null,"original":{"line":315,"column":10},"generated":{"line":329,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":315,"column":21},"generated":{"line":329,"column":29}},{"source":"../../src/poller.ts","name":null,"original":{"line":315,"column":23},"generated":{"line":329,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":315,"column":30},"generated":{"line":329,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":315,"column":31},"generated":{"line":329,"column":39}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":53},"generated":{"line":329,"column":50}},{"source":"../../src/poller.ts","name":null,"original":{"line":316,"column":10},"generated":{"line":330,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":316,"column":22},"generated":{"line":330,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":316,"column":24},"generated":{"line":330,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":316,"column":29},"generated":{"line":330,"column":37}},{"source":"../../src/poller.ts","name":null,"original":{"line":316,"column":24},"generated":{"line":330,"column":49}},{"source":"../../src/poller.ts","name":null,"original":{"line":316,"column":42},"generated":{"line":330,"column":50}},{"source":"../../src/poller.ts","name":null,"original":{"line":316,"column":24},"generated":{"line":330,"column":54}},{"source":"../../src/poller.ts","name":null,"original":{"line":316,"column":47},"generated":{"line":330,"column":55}},{"source":"../../src/poller.ts","name":null,"original":{"line":316,"column":24},"generated":{"line":330,"column":59}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":53},"generated":{"line":331,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":31},"generated":{"line":331,"column":17}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":331,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":333,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":8},"generated":{"line":334,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":314,"column":13},"generated":{"line":334,"column":21}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":334,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":318,"column":8},"generated":{"line":336,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":318,"column":12},"generated":{"line":336,"column":20}},{"source":"../../src/poller.ts","name":null,"original":{"line":318,"column":17},"generated":{"line":336,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":318,"column":12},"generated":{"line":336,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":318,"column":29},"generated":{"line":336,"column":37}},{"source":"../../src/poller.ts","name":null,"original":{"line":318,"column":34},"generated":{"line":336,"column":42}},{"source":"../../src/poller.ts","name":null,"original":{"line":318,"column":8},"generated":{"line":336,"column":49}},{"source":"../../src/poller.ts","name":null,"original":{"line":318,"column":43},"generated":{"line":336,"column":51}},{"source":"../../src/poller.ts","name":null,"original":{"line":319,"column":10},"generated":{"line":337,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":320,"column":10},"generated":{"line":338,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":321,"column":10},"generated":{"line":339,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":322,"column":10},"generated":{"line":340,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":323,"column":10},"generated":{"line":341,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":324,"column":10},"generated":{"line":342,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":324,"column":15},"generated":{"line":342,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":324,"column":10},"generated":{"line":342,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":324,"column":23},"generated":{"line":342,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":324,"column":28},"generated":{"line":342,"column":36}},{"source":"../../src/poller.ts","name":null,"original":{"line":324,"column":23},"generated":{"line":342,"column":45}},{"source":"../../src/poller.ts","name":null,"original":{"line":324,"column":38},"generated":{"line":342,"column":46}},{"source":"../../src/poller.ts","name":null,"original":{"line":324,"column":23},"generated":{"line":342,"column":51}},{"source":"../../src/poller.ts","name":null,"original":{"line":324,"column":44},"generated":{"line":342,"column":52}},{"source":"../../src/poller.ts","name":null,"original":{"line":324,"column":10},"generated":{"line":342,"column":58}},{"source":"../../src/poller.ts","name":null,"original":{"line":325,"column":9},"generated":{"line":343,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":345,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":346,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":347,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":349,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":350,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":351,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":328,"column":6},"generated":{"line":352,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":328,"column":11},"generated":{"line":352,"column":21}},{"source":"../../src/poller.ts","name":null,"original":{"line":328,"column":6},"generated":{"line":352,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":328,"column":21},"generated":{"line":352,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":328,"column":6},"generated":{"line":352,"column":36}},{"source":"../../src/poller.ts","name":null,"original":{"line":328,"column":27},"generated":{"line":352,"column":37}},{"source":"../../src/poller.ts","name":null,"original":{"line":328,"column":6},"generated":{"line":352,"column":42}},{"source":"../../src/poller.ts","name":null,"original":{"line":329,"column":6},"generated":{"line":354,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":329,"column":10},"generated":{"line":354,"column":20}},{"source":"../../src/poller.ts","name":null,"original":{"line":329,"column":15},"generated":{"line":354,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":329,"column":6},"generated":{"line":354,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":329,"column":23},"generated":{"line":354,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":330,"column":8},"generated":{"line":355,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":330,"column":13},"generated":{"line":355,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":330,"column":8},"generated":{"line":355,"column":29}},{"source":"../../src/poller.ts","name":null,"original":{"line":331,"column":7},"generated":{"line":356,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":358,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":360,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":361,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":362,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":363,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":364,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":365,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":311,"column":10},"generated":{"line":366,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":336,"column":2},"generated":{"line":374,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":10},"generated":{"line":385,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":23},"generated":{"line":385,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":10},"generated":{"line":385,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":36},"generated":{"line":385,"column":40}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":36},"generated":{"line":386,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":345,"column":27},"generated":{"line":386,"column":49}},{"source":"../../src/poller.ts","name":null,"original":{"line":345,"column":32},"generated":{"line":386,"column":54}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":36},"generated":{"line":386,"column":75}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":36},"generated":{"line":387,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":36},"generated":{"line":389,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":345,"column":4},"generated":{"line":390,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":345,"column":55},"generated":{"line":390,"column":60}},{"source":"../../src/poller.ts","name":null,"original":{"line":345,"column":55},"generated":{"line":391,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":345,"column":15},"generated":{"line":391,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":345,"column":55},"generated":{"line":391,"column":22}},{"source":"../../src/poller.ts","name":null,"original":{"line":346,"column":6},"generated":{"line":392,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":346,"column":14},"generated":{"line":392,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":346,"column":15},"generated":{"line":392,"column":19}},{"source":"../../src/poller.ts","name":null,"original":{"line":346,"column":14},"generated":{"line":392,"column":24}},{"source":"../../src/poller.ts","name":null,"original":{"line":346,"column":6},"generated":{"line":392,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":347,"column":5},"generated":{"line":393,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":36},"generated":{"line":394,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":36},"generated":{"line":395,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":36},"generated":{"line":396,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":36},"generated":{"line":397,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":344,"column":36},"generated":{"line":398,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":348,"column":3},"generated":{"line":399,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":350,"column":2},"generated":{"line":400,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":408,"column":83}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":409,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":410,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":411,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":412,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":413,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":414,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":27},"generated":{"line":415,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":415,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":72},"generated":{"line":415,"column":85}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":415,"column":87}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":416,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":417,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":355,"column":27},"generated":{"line":417,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":355,"column":32},"generated":{"line":417,"column":28}},{"source":"../../src/poller.ts","name":null,"original":{"line":355,"column":27},"generated":{"line":417,"column":37}},{"source":"../../src/poller.ts","name":null,"original":{"line":355,"column":42},"generated":{"line":417,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":355,"column":27},"generated":{"line":417,"column":44}},{"source":"../../src/poller.ts","name":null,"original":{"line":355,"column":49},"generated":{"line":417,"column":45}},{"source":"../../src/poller.ts","name":null,"original":{"line":355,"column":27},"generated":{"line":417,"column":52}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":417,"column":53}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":419,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":355,"column":4},"generated":{"line":420,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":355,"column":9},"generated":{"line":420,"column":21}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":420,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":356,"column":4},"generated":{"line":422,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":356,"column":8},"generated":{"line":422,"column":20}},{"source":"../../src/poller.ts","name":null,"original":{"line":356,"column":13},"generated":{"line":422,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":356,"column":4},"generated":{"line":422,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":356,"column":21},"generated":{"line":422,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":357,"column":6},"generated":{"line":423,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":357,"column":11},"generated":{"line":423,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":357,"column":6},"generated":{"line":423,"column":29}},{"source":"../../src/poller.ts","name":null,"original":{"line":357,"column":18},"generated":{"line":423,"column":30}},{"source":"../../src/poller.ts","name":null,"original":{"line":357,"column":22},"generated":{"line":423,"column":34}},{"source":"../../src/poller.ts","name":null,"original":{"line":357,"column":18},"generated":{"line":423,"column":54}},{"source":"../../src/poller.ts","name":null,"original":{"line":357,"column":43},"generated":{"line":423,"column":55}},{"source":"../../src/poller.ts","name":null,"original":{"line":357,"column":18},"generated":{"line":423,"column":73}},{"source":"../../src/poller.ts","name":null,"original":{"line":357,"column":6},"generated":{"line":423,"column":74}},{"source":"../../src/poller.ts","name":null,"original":{"line":358,"column":5},"generated":{"line":424,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":426,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":427,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":428,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":429,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":430,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":431,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":432,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":361,"column":2},"generated":{"line":440,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":369,"column":9},"generated":{"line":451,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":369,"column":61},"generated":{"line":451,"column":27}},{"source":"../../src/poller.ts","name":null,"original":{"line":369,"column":61},"generated":{"line":452,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":369,"column":61},"generated":{"line":454,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":369,"column":14},"generated":{"line":454,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":369,"column":61},"generated":{"line":454,"column":17}},{"source":"../../src/poller.ts","name":null,"original":{"line":369,"column":59},"generated":{"line":454,"column":88}},{"source":"../../src/poller.ts","name":null,"original":{"line":369,"column":61},"generated":{"line":454,"column":90}},{"source":"../../src/poller.ts","name":null,"original":{"line":370,"column":4},"generated":{"line":456,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":370,"column":8},"generated":{"line":456,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":370,"column":9},"generated":{"line":456,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":370,"column":14},"generated":{"line":456,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":370,"column":4},"generated":{"line":456,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":370,"column":31},"generated":{"line":456,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":371,"column":6},"generated":{"line":457,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":371,"column":11},"generated":{"line":457,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":371,"column":6},"generated":{"line":457,"column":28}},{"source":"../../src/poller.ts","name":null,"original":{"line":371,"column":29},"generated":{"line":457,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":371,"column":34},"generated":{"line":457,"column":36}},{"source":"../../src/poller.ts","name":null,"original":{"line":371,"column":29},"generated":{"line":457,"column":44}},{"source":"../../src/poller.ts","name":null,"original":{"line":371,"column":43},"generated":{"line":457,"column":45}},{"source":"../../src/poller.ts","name":null,"original":{"line":371,"column":29},"generated":{"line":457,"column":52}},{"source":"../../src/poller.ts","name":null,"original":{"line":371,"column":6},"generated":{"line":457,"column":53}},{"source":"../../src/poller.ts","name":null,"original":{"line":372,"column":6},"generated":{"line":459,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":372,"column":12},"generated":{"line":459,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":372,"column":32},"generated":{"line":459,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":372,"column":35},"generated":{"line":459,"column":35}},{"source":"../../src/poller.ts","name":null,"original":{"line":372,"column":12},"generated":{"line":459,"column":44}},{"source":"../../src/poller.ts","name":null,"original":{"line":372,"column":35},"generated":{"line":459,"column":64}},{"source":"../../src/poller.ts","name":null,"original":{"line":372,"column":46},"generated":{"line":459,"column":67}},{"source":"../../src/poller.ts","name":null,"original":{"line":373,"column":8},"generated":{"line":460,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":373,"column":12},"generated":{"line":460,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":373,"column":13},"generated":{"line":460,"column":17}},{"source":"../../src/poller.ts","name":null,"original":{"line":373,"column":8},"generated":{"line":460,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":373,"column":31},"generated":{"line":460,"column":35}},{"source":"../../src/poller.ts","name":null,"original":{"line":373,"column":8},"generated":{"line":460,"column":44}},{"source":"../../src/poller.ts","name":null,"original":{"line":374,"column":7},"generated":{"line":461,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":372,"column":6},"generated":{"line":461,"column":9}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":6},"generated":{"line":463,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":11},"generated":{"line":463,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":6},"generated":{"line":463,"column":28}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":27},"generated":{"line":463,"column":29}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":6},"generated":{"line":463,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":32},"generated":{"line":463,"column":34}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":6},"generated":{"line":463,"column":54}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":54},"generated":{"line":463,"column":56}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":6},"generated":{"line":463,"column":76}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":76},"generated":{"line":463,"column":78}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":6},"generated":{"line":463,"column":83}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":82},"generated":{"line":463,"column":84}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":87},"generated":{"line":463,"column":89}},{"source":"../../src/poller.ts","name":null,"original":{"line":375,"column":6},"generated":{"line":463,"column":95}},{"source":"../../src/poller.ts","name":null,"original":{"line":376,"column":5},"generated":{"line":464,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":377,"column":4},"generated":{"line":466,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":377,"column":11},"generated":{"line":466,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":377,"column":16},"generated":{"line":466,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":377,"column":4},"generated":{"line":466,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":378,"column":3},"generated":{"line":467,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":380,"column":2},"generated":{"line":468,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":475,"column":86}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":476,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":477,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":478,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":479,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":384,"column":4},"generated":{"line":480,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":384,"column":8},"generated":{"line":480,"column":20}},{"source":"../../src/poller.ts","name":null,"original":{"line":384,"column":13},"generated":{"line":480,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":384,"column":4},"generated":{"line":480,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":384,"column":22},"generated":{"line":480,"column":34}},{"source":"../../src/poller.ts","name":null,"original":{"line":385,"column":6},"generated":{"line":481,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":385,"column":11},"generated":{"line":481,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":385,"column":6},"generated":{"line":481,"column":35}},{"source":"../../src/poller.ts","name":null,"original":{"line":385,"column":26},"generated":{"line":481,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":385,"column":6},"generated":{"line":481,"column":43}},{"source":"../../src/poller.ts","name":null,"original":{"line":385,"column":32},"generated":{"line":481,"column":44}},{"source":"../../src/poller.ts","name":null,"original":{"line":385,"column":37},"generated":{"line":481,"column":49}},{"source":"../../src/poller.ts","name":null,"original":{"line":385,"column":6},"generated":{"line":481,"column":55}},{"source":"../../src/poller.ts","name":null,"original":{"line":386,"column":5},"generated":{"line":482,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":484,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":387,"column":11},"generated":{"line":484,"column":50}},{"source":"../../src/poller.ts","name":null,"original":{"line":387,"column":16},"generated":{"line":484,"column":55}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":484,"column":62}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":486,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":487,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":488,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":489,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":490,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":491,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":383,"column":9},"generated":{"line":492,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":390,"column":2},"generated":{"line":500,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":396,"column":9},"generated":{"line":509,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":396,"column":20},"generated":{"line":509,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":396,"column":9},"generated":{"line":509,"column":39}},{"source":"../../src/poller.ts","name":null,"original":{"line":396,"column":53},"generated":{"line":509,"column":41}},{"source":"../../src/poller.ts","name":null,"original":{"line":396,"column":53},"generated":{"line":510,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":397,"column":4},"generated":{"line":512,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":397,"column":9},"generated":{"line":512,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":397,"column":4},"generated":{"line":512,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":397,"column":31},"generated":{"line":512,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":397,"column":4},"generated":{"line":512,"column":37}},{"source":"../../src/poller.ts","name":null,"original":{"line":397,"column":36},"generated":{"line":512,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":397,"column":4},"generated":{"line":512,"column":46}},{"source":"../../src/poller.ts","name":null,"original":{"line":398,"column":4},"generated":{"line":513,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":398,"column":11},"generated":{"line":513,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":398,"column":22},"generated":{"line":513,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":6},"generated":{"line":514,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":10},"generated":{"line":514,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":11},"generated":{"line":514,"column":15}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":6},"generated":{"line":514,"column":36}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":35},"generated":{"line":514,"column":39}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":39},"generated":{"line":514,"column":45}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":40},"generated":{"line":514,"column":46}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":35},"generated":{"line":514,"column":67}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":62},"generated":{"line":514,"column":68}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":35},"generated":{"line":514,"column":74}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":69},"generated":{"line":514,"column":75}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":70},"generated":{"line":514,"column":85}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":69},"generated":{"line":514,"column":86}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":69},"generated":{"line":515,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":76},"generated":{"line":515,"column":17}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":77},"generated":{"line":515,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":82},"generated":{"line":515,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":69},"generated":{"line":515,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":69},"generated":{"line":516,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":35},"generated":{"line":516,"column":9}},{"source":"../../src/poller.ts","name":null,"original":{"line":399,"column":6},"generated":{"line":516,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":400,"column":5},"generated":{"line":517,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":398,"column":4},"generated":{"line":517,"column":7}},{"source":"../../src/poller.ts","name":null,"original":{"line":401,"column":3},"generated":{"line":518,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":403,"column":2},"generated":{"line":519,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":406,"column":9},"generated":{"line":525,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":406,"column":15},"generated":{"line":525,"column":29}},{"source":"../../src/poller.ts","name":null,"original":{"line":407,"column":4},"generated":{"line":526,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":407,"column":10},"generated":{"line":526,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":407,"column":15},"generated":{"line":526,"column":15}},{"source":"../../src/poller.ts","name":null,"original":{"line":407,"column":47},"generated":{"line":526,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":407,"column":52},"generated":{"line":526,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":407,"column":47},"generated":{"line":526,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":407,"column":62},"generated":{"line":526,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":407,"column":4},"generated":{"line":526,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":4},"generated":{"line":527,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":11},"generated":{"line":527,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":18},"generated":{"line":527,"column":20}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":19},"generated":{"line":527,"column":21}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":24},"generated":{"line":527,"column":26}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":25},"generated":{"line":527,"column":27}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":19},"generated":{"line":527,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":40},"generated":{"line":527,"column":42}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":45},"generated":{"line":527,"column":47}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":46},"generated":{"line":527,"column":48}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":19},"generated":{"line":527,"column":59}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":61},"generated":{"line":527,"column":63}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":66},"generated":{"line":527,"column":68}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":67},"generated":{"line":527,"column":69}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":18},"generated":{"line":527,"column":74}},{"source":"../../src/poller.ts","name":null,"original":{"line":408,"column":4},"generated":{"line":527,"column":75}},{"source":"../../src/poller.ts","name":null,"original":{"line":409,"column":3},"generated":{"line":528,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":411,"column":2},"generated":{"line":529,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":414,"column":9},"generated":{"line":535,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":414,"column":20},"generated":{"line":535,"column":34}},{"source":"../../src/poller.ts","name":null,"original":{"line":415,"column":4},"generated":{"line":536,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":415,"column":8},"generated":{"line":536,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":415,"column":9},"generated":{"line":536,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":415,"column":14},"generated":{"line":536,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":415,"column":4},"generated":{"line":536,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":415,"column":23},"generated":{"line":536,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":416,"column":6},"generated":{"line":537,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":416,"column":11},"generated":{"line":537,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":416,"column":6},"generated":{"line":537,"column":20}},{"source":"../../src/poller.ts","name":null,"original":{"line":416,"column":21},"generated":{"line":537,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":416,"column":6},"generated":{"line":537,"column":27}},{"source":"../../src/poller.ts","name":null,"original":{"line":417,"column":6},"generated":{"line":539,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":417,"column":10},"generated":{"line":539,"column":12}},{"source":"../../src/poller.ts","name":null,"original":{"line":417,"column":15},"generated":{"line":539,"column":17}},{"source":"../../src/poller.ts","name":null,"original":{"line":417,"column":6},"generated":{"line":539,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":417,"column":23},"generated":{"line":539,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":418,"column":8},"generated":{"line":540,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":418,"column":13},"generated":{"line":540,"column":15}},{"source":"../../src/poller.ts","name":null,"original":{"line":418,"column":8},"generated":{"line":540,"column":21}},{"source":"../../src/poller.ts","name":null,"original":{"line":418,"column":20},"generated":{"line":540,"column":22}},{"source":"../../src/poller.ts","name":null,"original":{"line":418,"column":24},"generated":{"line":540,"column":26}},{"source":"../../src/poller.ts","name":null,"original":{"line":418,"column":20},"generated":{"line":540,"column":44}},{"source":"../../src/poller.ts","name":null,"original":{"line":418,"column":43},"generated":{"line":540,"column":45}},{"source":"../../src/poller.ts","name":null,"original":{"line":418,"column":20},"generated":{"line":540,"column":77}},{"source":"../../src/poller.ts","name":null,"original":{"line":418,"column":8},"generated":{"line":540,"column":78}},{"source":"../../src/poller.ts","name":null,"original":{"line":419,"column":7},"generated":{"line":541,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":420,"column":5},"generated":{"line":542,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":421,"column":3},"generated":{"line":543,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":423,"column":2},"generated":{"line":544,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":426,"column":9},"generated":{"line":550,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":426,"column":18},"generated":{"line":550,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":427,"column":4},"generated":{"line":551,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":427,"column":11},"generated":{"line":551,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":427,"column":16},"generated":{"line":551,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":427,"column":4},"generated":{"line":551,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":428,"column":3},"generated":{"line":552,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":430,"column":2},"generated":{"line":553,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":439,"column":9},"generated":{"line":565,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":439,"column":72},"generated":{"line":565,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":439,"column":72},"generated":{"line":566,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":439,"column":25},"generated":{"line":566,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":439,"column":72},"generated":{"line":566,"column":17}},{"source":"../../src/poller.ts","name":null,"original":{"line":439,"column":70},"generated":{"line":566,"column":88}},{"source":"../../src/poller.ts","name":null,"original":{"line":439,"column":72},"generated":{"line":566,"column":90}},{"source":"../../src/poller.ts","name":null,"original":{"line":440,"column":4},"generated":{"line":568,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":440,"column":8},"generated":{"line":568,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":440,"column":9},"generated":{"line":568,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":440,"column":14},"generated":{"line":568,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":440,"column":4},"generated":{"line":568,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":440,"column":23},"generated":{"line":568,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":441,"column":6},"generated":{"line":569,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":441,"column":11},"generated":{"line":569,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":441,"column":6},"generated":{"line":569,"column":20}},{"source":"../../src/poller.ts","name":null,"original":{"line":441,"column":21},"generated":{"line":569,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":441,"column":6},"generated":{"line":569,"column":27}},{"source":"../../src/poller.ts","name":null,"original":{"line":442,"column":5},"generated":{"line":570,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":443,"column":4},"generated":{"line":572,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":443,"column":8},"generated":{"line":572,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":443,"column":9},"generated":{"line":572,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":443,"column":14},"generated":{"line":572,"column":16}},{"source":"../../src/poller.ts","name":null,"original":{"line":443,"column":4},"generated":{"line":572,"column":29}},{"source":"../../src/poller.ts","name":null,"original":{"line":443,"column":29},"generated":{"line":572,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":444,"column":6},"generated":{"line":573,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":444,"column":11},"generated":{"line":573,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":444,"column":6},"generated":{"line":573,"column":26}},{"source":"../../src/poller.ts","name":null,"original":{"line":444,"column":27},"generated":{"line":573,"column":29}},{"source":"../../src/poller.ts","name":null,"original":{"line":444,"column":32},"generated":{"line":573,"column":34}},{"source":"../../src/poller.ts","name":null,"original":{"line":444,"column":27},"generated":{"line":573,"column":44}},{"source":"../../src/poller.ts","name":null,"original":{"line":444,"column":43},"generated":{"line":573,"column":45}},{"source":"../../src/poller.ts","name":null,"original":{"line":444,"column":27},"generated":{"line":573,"column":52}},{"source":"../../src/poller.ts","name":null,"original":{"line":444,"column":6},"generated":{"line":573,"column":53}},{"source":"../../src/poller.ts","name":null,"original":{"line":445,"column":5},"generated":{"line":574,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":443,"column":4},"generated":{"line":574,"column":7}},{"source":"../../src/poller.ts","name":null,"original":{"line":445,"column":11},"generated":{"line":574,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":445,"column":15},"generated":{"line":574,"column":17}},{"source":"../../src/poller.ts","name":null,"original":{"line":445,"column":22},"generated":{"line":574,"column":24}},{"source":"../../src/poller.ts","name":null,"original":{"line":445,"column":23},"generated":{"line":574,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":445,"column":11},"generated":{"line":574,"column":36}},{"source":"../../src/poller.ts","name":null,"original":{"line":445,"column":36},"generated":{"line":574,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":446,"column":6},"generated":{"line":575,"column":8}},{"source":"../../src/poller.ts","name":null,"original":{"line":446,"column":12},"generated":{"line":575,"column":14}},{"source":"../../src/poller.ts","name":null,"original":{"line":446,"column":16},"generated":{"line":575,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":446,"column":12},"generated":{"line":575,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":446,"column":22},"generated":{"line":575,"column":24}},{"source":"../../src/poller.ts","name":null,"original":{"line":446,"column":12},"generated":{"line":575,"column":63}},{"source":"../../src/poller.ts","name":null,"original":{"line":446,"column":6},"generated":{"line":575,"column":64}},{"source":"../../src/poller.ts","name":null,"original":{"line":447,"column":5},"generated":{"line":576,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":448,"column":4},"generated":{"line":578,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":448,"column":11},"generated":{"line":578,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":448,"column":16},"generated":{"line":578,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":448,"column":4},"generated":{"line":578,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":449,"column":3},"generated":{"line":579,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":451,"column":2},"generated":{"line":580,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":499,"column":9},"generated":{"line":631,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":499,"column":26},"generated":{"line":631,"column":40}},{"source":"../../src/poller.ts","name":null,"original":{"line":500,"column":4},"generated":{"line":632,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":500,"column":11},"generated":{"line":632,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":500,"column":16},"generated":{"line":632,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":500,"column":11},"generated":{"line":632,"column":27}},{"source":"../../src/poller.ts","name":null,"original":{"line":500,"column":26},"generated":{"line":632,"column":28}},{"source":"../../src/poller.ts","name":null,"original":{"line":500,"column":4},"generated":{"line":632,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":501,"column":3},"generated":{"line":633,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":503,"column":2},"generated":{"line":634,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":509,"column":9},"generated":{"line":643,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":509,"column":18},"generated":{"line":643,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":510,"column":4},"generated":{"line":644,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":510,"column":10},"generated":{"line":644,"column":10}},{"source":"../../src/poller.ts","name":null,"original":{"line":510,"column":15},"generated":{"line":644,"column":15}},{"source":"../../src/poller.ts","name":null,"original":{"line":510,"column":47},"generated":{"line":644,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":510,"column":52},"generated":{"line":644,"column":23}},{"source":"../../src/poller.ts","name":null,"original":{"line":510,"column":47},"generated":{"line":644,"column":32}},{"source":"../../src/poller.ts","name":null,"original":{"line":510,"column":62},"generated":{"line":644,"column":33}},{"source":"../../src/poller.ts","name":null,"original":{"line":510,"column":4},"generated":{"line":644,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":511,"column":4},"generated":{"line":645,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":511,"column":11},"generated":{"line":645,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":511,"column":16},"generated":{"line":645,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":511,"column":17},"generated":{"line":645,"column":19}},{"source":"../../src/poller.ts","name":null,"original":{"line":511,"column":4},"generated":{"line":645,"column":25}},{"source":"../../src/poller.ts","name":null,"original":{"line":512,"column":3},"generated":{"line":646,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":514,"column":2},"generated":{"line":647,"column":4}},{"source":"../../src/poller.ts","name":null,"original":{"line":518,"column":9},"generated":{"line":654,"column":11}},{"source":"../../src/poller.ts","name":null,"original":{"line":518,"column":17},"generated":{"line":654,"column":31}},{"source":"../../src/poller.ts","name":null,"original":{"line":519,"column":4},"generated":{"line":655,"column":6}},{"source":"../../src/poller.ts","name":null,"original":{"line":519,"column":11},"generated":{"line":655,"column":13}},{"source":"../../src/poller.ts","name":null,"original":{"line":519,"column":16},"generated":{"line":655,"column":18}},{"source":"../../src/poller.ts","name":null,"original":{"line":519,"column":11},"generated":{"line":655,"column":27}},{"source":"../../src/poller.ts","name":null,"original":{"line":519,"column":26},"generated":{"line":655,"column":28}},{"source":"../../src/poller.ts","name":null,"original":{"line":519,"column":11},"generated":{"line":655,"column":36}},{"source":"../../src/poller.ts","name":null,"original":{"line":519,"column":4},"generated":{"line":655,"column":38}},{"source":"../../src/poller.ts","name":null,"original":{"line":520,"column":3},"generated":{"line":656,"column":4}}],"sources":{"../../src/poller.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PollOperation, PollOperationState } from \"./pollOperation\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * CancelOnProgress is used as the return value of a Poller's onProgress method.\n * When a user invokes onProgress, they're required to pass in a function that will be\n * called as a callback with the new data received each time the poll operation is updated.\n * onProgress returns a function that will prevent any further update to reach the original callback.\n */\nexport type CancelOnProgress = () => void;\n\n/**\n * PollProgressCallback<TState> is the type of the callback functions sent to onProgress.\n * These functions will receive a TState that is defined by your implementation of\n * the Poller class.\n */\nexport type PollProgressCallback<TState> = (state: TState) => void;\n\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(this, PollerStoppedError.prototype);\n  }\n}\n\n/**\n * When a poller is cancelled through the `cancelOperation` method,\n * the poller will be rejected with an instance of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(this, PollerCancelledError.prototype);\n  }\n}\n\n/**\n * Abstract representation of a poller, intended to expose just the minimal API that the user needs to work with.\n */\n// eslint-disable-next-line no-use-before-define\nexport interface PollerLike<TState extends PollOperationState<TResult>, TResult> {\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   */\n  poll(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  pollUntilDone(): Promise<TResult>;\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  onProgress(callback: (state: TState) => void): CancelOnProgress;\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  isDone(): boolean;\n  /**\n   * Stops the poller. After this, no manual or automated requests can be sent.\n   */\n  stopPolling(): void;\n  /**\n   * Returns true if the poller is stopped.\n   */\n  isStopped(): boolean;\n  /**\n   * Attempts to cancel the underlying operation.\n   */\n  cancelOperation(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns the state of the operation.\n   * The TState defined in PollerLike can be a subset of the TState defined in\n   * the Poller implementation.\n   */\n  getOperationState(): TState;\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  getResult(): TResult | undefined;\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  toString(): string;\n}\n\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nexport abstract class Poller<TState extends PollOperationState<TResult>, TResult>\n  implements PollerLike<TState, TResult>\n{\n  private stopped: boolean = true;\n  private resolve?: (value: TResult) => void;\n  private reject?: (error: PollerStoppedError | PollerCancelledError | Error) => void;\n  private pollOncePromise?: Promise<void>;\n  private cancelPromise?: Promise<void>;\n  private promise: Promise<TResult>;\n  private pollProgressCallbacks: PollProgressCallback<TState>[] = [];\n\n  /**\n   * The poller's operation is available in full to any of the methods of the Poller class\n   * and any class extending the Poller class.\n   */\n  protected operation: PollOperation<TState, TResult>;\n\n  /**\n   * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n   *\n   * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n   * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n   * operation has already been defined, at least its basic properties. The code below shows how to approach\n   * the definition of the constructor of a new custom poller.\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor({\n   *     // Anything you might need outside of the basics\n   *   }) {\n   *     let state: MyOperationState = {\n   *       privateProperty: private,\n   *       publicProperty: public,\n   *     };\n   *\n   *     const operation = {\n   *       state,\n   *       update,\n   *       cancel,\n   *       toString\n   *     }\n   *\n   *     // Sending the operation to the parent's constructor.\n   *     super(operation);\n   *\n   *     // You can assign more local properties here.\n   *   }\n   * }\n   * ```\n   *\n   * Inside of this constructor, a new promise is created. This will be used to\n   * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n   * resolve and reject methods are also used internally to control when to resolve\n   * or reject anyone waiting for the poller to finish.\n   *\n   * The constructor of a custom implementation of a poller is where any serialized version of\n   * a previous poller's operation should be deserialized into the operation sent to the\n   * base constructor. For example:\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor(\n   *     baseOperation: string | undefined\n   *   ) {\n   *     let state: MyOperationState = {};\n   *     if (baseOperation) {\n   *       state = {\n   *         ...JSON.parse(baseOperation).state,\n   *         ...state\n   *       };\n   *     }\n   *     const operation = {\n   *       state,\n   *       // ...\n   *     }\n   *     super(operation);\n   *   }\n   * }\n   * ```\n   *\n   * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n   */\n  constructor(operation: PollOperation<TState, TResult>) {\n    this.operation = operation;\n    this.promise = new Promise<TResult>(\n      (\n        resolve: (result: TResult) => void,\n        reject: (error: PollerStoppedError | PollerCancelledError | Error) => void\n      ) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      }\n    );\n    // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n    this.promise.catch(() => {\n      /* intentionally blank */\n    });\n  }\n\n  /**\n   * Defines how much to wait between each poll request.\n   * This has to be implemented by your custom poller.\n   *\n   * \\@azure/core-http has a simple implementation of a delay function that waits as many milliseconds as specified.\n   * This can be used as follows:\n   *\n   * ```ts\n   * import { delay } from \"@azure/core-http\";\n   *\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   // The other necessary definitions.\n   *\n   *   async delay(): Promise<void> {\n   *     const milliseconds = 1000;\n   *     return delay(milliseconds);\n   *   }\n   * }\n   * ```\n   *\n   */\n  protected abstract delay(): Promise<void>;\n\n  /**\n   * Starts a loop that will break only if the poller is done\n   * or if the poller is stopped.\n   */\n  private async startPolling(): Promise<void> {\n    if (this.stopped) {\n      this.stopped = false;\n    }\n    while (!this.isStopped() && !this.isDone()) {\n      await this.poll();\n      await this.delay();\n    }\n  }\n\n  /**\n   * pollOnce does one polling, by calling to the update method of the underlying\n   * poll operation to make any relevant change effective.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  private async pollOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    try {\n      if (!this.isDone()) {\n        this.operation = await this.operation.update({\n          abortSignal: options.abortSignal,\n          fireProgress: this.fireProgress.bind(this),\n        });\n        if (this.isDone() && this.resolve) {\n          // If the poller has finished polling, this means we now have a result.\n          // However, it can be the case that TResult is instantiated to void, so\n          // we are not expecting a result anyway. To assert that we might not\n          // have a result eventually after finishing polling, we cast the result\n          // to TResult.\n          this.resolve(this.operation.state.result as TResult);\n        }\n      }\n    } catch (e) {\n      this.operation.state.error = e;\n      if (this.reject) {\n        this.reject(e);\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * fireProgress calls the functions passed in via onProgress the method of the poller.\n   *\n   * It loops over all of the callbacks received from onProgress, and executes them, sending them\n   * the current operation state.\n   *\n   * @param state - The current operation state.\n   */\n  private fireProgress(state: TState): void {\n    for (const callback of this.pollProgressCallbacks) {\n      callback(state);\n    }\n  }\n\n  /**\n   * Invokes the underlying operation's cancel method, and rejects the\n   * pollUntilDone promise.\n   */\n  private async cancelOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    this.operation = await this.operation.cancel(options);\n    if (this.reject) {\n      this.reject(new PollerCancelledError(\"Poller cancelled\"));\n    }\n  }\n\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public poll(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.pollOncePromise) {\n      this.pollOncePromise = this.pollOnce(options);\n      const clearPollOncePromise = (): void => {\n        this.pollOncePromise = undefined;\n      };\n      this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n    }\n    return this.pollOncePromise;\n  }\n\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  public async pollUntilDone(): Promise<TResult> {\n    if (this.stopped) {\n      this.startPolling().catch(this.reject);\n    }\n    return this.promise;\n  }\n\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  public onProgress(callback: (state: TState) => void): CancelOnProgress {\n    this.pollProgressCallbacks.push(callback);\n    return (): void => {\n      this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n    };\n  }\n\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  public isDone(): boolean {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return Boolean(state.isCompleted || state.isCancelled || state.error);\n  }\n\n  /**\n   * Stops the poller from continuing to poll.\n   */\n  public stopPolling(): void {\n    if (!this.stopped) {\n      this.stopped = true;\n      if (this.reject) {\n        this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n      }\n    }\n  }\n\n  /**\n   * Returns true if the poller is stopped.\n   */\n  public isStopped(): boolean {\n    return this.stopped;\n  }\n\n  /**\n   * Attempts to cancel the underlying operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * If it's called again before it finishes, it will throw an error.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public cancelOperation(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.stopped) {\n      this.stopped = true;\n    }\n    if (!this.cancelPromise) {\n      this.cancelPromise = this.cancelOnce(options);\n    } else if (options.abortSignal) {\n      throw new Error(\"A cancel request is currently pending\");\n    }\n    return this.cancelPromise;\n  }\n\n  /**\n   * Returns the state of the operation.\n   *\n   * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n   * implementations of the pollers can customize what's shared with the public by writing their own\n   * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n   * and a public type representing a safe to share subset of the properties of the internal state.\n   * Their definition of getOperationState can then return their public type.\n   *\n   * Example:\n   *\n   * ```ts\n   * // Let's say we have our poller's operation state defined as:\n   * interface MyOperationState extends PollOperationState<ResultType> {\n   *   privateProperty?: string;\n   *   publicProperty?: string;\n   * }\n   *\n   * // To allow us to have a true separation of public and private state, we have to define another interface:\n   * interface PublicState extends PollOperationState<ResultType> {\n   *   publicProperty?: string;\n   * }\n   *\n   * // Then, we define our Poller as follows:\n   * export class MyPoller extends Poller<MyOperationState, ResultType> {\n   *   // ... More content is needed here ...\n   *\n   *   public getOperationState(): PublicState {\n   *     const state: PublicState = this.operation.state;\n   *     return {\n   *       // Properties from PollOperationState<TResult>\n   *       isStarted: state.isStarted,\n   *       isCompleted: state.isCompleted,\n   *       isCancelled: state.isCancelled,\n   *       error: state.error,\n   *       result: state.result,\n   *\n   *       // The only other property needed by PublicState.\n   *       publicProperty: state.publicProperty\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * You can see this in the tests of this repository, go to the file:\n   * `../test/utils/testPoller.ts`\n   * and look for the getOperationState implementation.\n   */\n  public getOperationState(): TState {\n    return this.operation.state;\n  }\n\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  public getResult(): TResult | undefined {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return state.result;\n  }\n\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  public toString(): string {\n    return this.operation.toString();\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"a76e6a59b71687e9c04cb24b9f7b80d1","cacheData":{"env":{}}}
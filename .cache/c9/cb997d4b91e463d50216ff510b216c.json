{"id":"../node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js","dependencies":[{"name":"C:\\Users\\rodne\\azuremongotut\\node_modules\\@azure\\core-http\\dist-esm\\src\\policies\\requestPolicy.js.map","includedInParent":true,"mtime":1656031345021},{"name":"C:\\Users\\rodne\\azuremongotut\\package.json","includedInParent":true,"mtime":1657925171107},{"name":"C:\\Users\\rodne\\azuremongotut\\node_modules\\@azure\\core-http\\package.json","includedInParent":true,"mtime":1656031344383},{"name":"../httpPipelineLogLevel","loc":{"line":3,"column":37,"index":112},"parent":"C:\\Users\\rodne\\azuremongotut\\node_modules\\@azure\\core-http\\dist-esm\\src\\policies\\requestPolicy.js","resolved":"C:\\Users\\rodne\\azuremongotut\\node_modules\\@azure\\core-http\\dist-esm\\src\\httpPipelineLogLevel.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RequestPolicyOptions = exports.BaseRequestPolicy = void 0;\n\nvar _httpPipelineLogLevel = require(\"../httpPipelineLogLevel\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/**\n * The base class from which all request policies derive.\n */\nvar BaseRequestPolicy = /*#__PURE__*/function () {\n  /**\n   * The main method to implement that manipulates a request/response.\n   */\n  function BaseRequestPolicy(\n  /**\n   * The next policy in the pipeline. Each policy is responsible for executing the next one if the request is to continue through the pipeline.\n   */\n  _nextPolicy,\n  /**\n   * The options that can be passed to a given request policy.\n   */\n  _options) {\n    _classCallCheck(this, BaseRequestPolicy);\n\n    this._nextPolicy = _nextPolicy;\n    this._options = _options;\n  }\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n\n\n  _createClass(BaseRequestPolicy, [{\n    key: \"shouldLog\",\n    value: function shouldLog(logLevel) {\n      return this._options.shouldLog(logLevel);\n    }\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meat the logger's threshold, then nothing will be logged.\n     * @param logLevel - The log level of this log.\n     * @param message - The message of this log.\n     */\n\n  }, {\n    key: \"log\",\n    value: function log(logLevel, message) {\n      this._options.log(logLevel, message);\n    }\n  }]);\n\n  return BaseRequestPolicy;\n}();\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\n\n\nexports.BaseRequestPolicy = BaseRequestPolicy;\n\nvar RequestPolicyOptions = /*#__PURE__*/function () {\n  function RequestPolicyOptions(_logger) {\n    _classCallCheck(this, RequestPolicyOptions);\n\n    this._logger = _logger;\n  }\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n\n\n  _createClass(RequestPolicyOptions, [{\n    key: \"shouldLog\",\n    value: function shouldLog(logLevel) {\n      return !!this._logger && logLevel !== _httpPipelineLogLevel.HttpPipelineLogLevel.OFF && logLevel <= this._logger.minimumLogLevel;\n    }\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meet the logger's threshold, then nothing will be logged.\n     * @param logLevel - The log level of this log.\n     * @param message - The message of this log.\n     */\n\n  }, {\n    key: \"log\",\n    value: function log(logLevel, message) {\n      if (this._logger && this.shouldLog(logLevel)) {\n        this._logger.log(logLevel, message);\n      }\n    }\n  }]);\n\n  return RequestPolicyOptions;\n}();\n\nexports.RequestPolicyOptions = RequestPolicyOptions;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":30,"column":22},"generated":{"line":19,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":20,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":23,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":24,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":27,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":27,"column":13}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":28,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":31,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":31,"column":10}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":47},"generated":{"line":31,"column":12}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":47},"generated":{"line":32,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":34,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":34,"column":9}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":34,"column":20}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":34,"column":23}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":34,"column":34}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":35,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":35,"column":9}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":35,"column":17}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":35,"column":20}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":35,"column":28}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":36,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":37,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":46,"column":11}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":56,"column":19},"generated":{"line":46,"column":30}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":46,"column":38}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":56,"column":49},"generated":{"line":46,"column":40}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":47,"column":6}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":11},"generated":{"line":47,"column":13}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":47,"column":18}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":11},"generated":{"line":47,"column":26}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":25},"generated":{"line":47,"column":27}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":11},"generated":{"line":47,"column":36}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":35},"generated":{"line":47,"column":37}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":11},"generated":{"line":47,"column":45}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":47,"column":46}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":58,"column":3},"generated":{"line":48,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":49,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":58,"column":11}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":66,"column":13},"generated":{"line":58,"column":24}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":58,"column":32}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":66,"column":45},"generated":{"line":58,"column":34}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":58,"column":41}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":66,"column":60},"generated":{"line":58,"column":43}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":59,"column":6}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":59,"column":11}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":59,"column":19}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":59,"column":20}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":59,"column":23}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":22},"generated":{"line":59,"column":24}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":59,"column":32}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":32},"generated":{"line":59,"column":34}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":59,"column":41}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":68,"column":3},"generated":{"line":60,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":91,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":94,"column":13},"generated":{"line":72,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":2},"generated":{"line":73,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":73,"column":32}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":2},"generated":{"line":73,"column":39}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":50},"generated":{"line":73,"column":41}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":50},"generated":{"line":74,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":76,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":76,"column":9}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":76,"column":16}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":76,"column":19}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":76,"column":26}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":95,"column":54},"generated":{"line":77,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":97,"column":2},"generated":{"line":78,"column":2}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":87,"column":11}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":102,"column":19},"generated":{"line":87,"column":30}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":87,"column":38}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":102,"column":49},"generated":{"line":87,"column":40}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":103,"column":4},"generated":{"line":88,"column":6}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":104,"column":6},"generated":{"line":88,"column":13}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":104,"column":7},"generated":{"line":88,"column":14}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":104,"column":8},"generated":{"line":88,"column":15}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":104,"column":13},"generated":{"line":88,"column":20}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":104,"column":6},"generated":{"line":88,"column":27}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":105,"column":6},"generated":{"line":88,"column":31}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":105,"column":14},"generated":{"line":88,"column":39}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":105,"column":19},"generated":{"line":88,"column":44}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":105,"column":19},"generated":{"line":88,"column":86}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":105,"column":40},"generated":{"line":88,"column":87}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":104,"column":6},"generated":{"line":88,"column":90}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":106,"column":6},"generated":{"line":88,"column":94}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":106,"column":14},"generated":{"line":88,"column":102}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":106,"column":18},"generated":{"line":88,"column":106}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":106,"column":23},"generated":{"line":88,"column":111}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":106,"column":18},"generated":{"line":88,"column":118}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":106,"column":31},"generated":{"line":88,"column":119}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":103,"column":4},"generated":{"line":88,"column":134}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":108,"column":3},"generated":{"line":89,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":110,"column":2},"generated":{"line":90,"column":4}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":116,"column":9},"generated":{"line":99,"column":11}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":116,"column":13},"generated":{"line":99,"column":24}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":116,"column":9},"generated":{"line":99,"column":32}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":116,"column":45},"generated":{"line":99,"column":34}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":116,"column":9},"generated":{"line":99,"column":41}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":116,"column":60},"generated":{"line":99,"column":43}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":4},"generated":{"line":100,"column":6}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":8},"generated":{"line":100,"column":10}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":13},"generated":{"line":100,"column":15}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":8},"generated":{"line":100,"column":22}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":24},"generated":{"line":100,"column":26}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":29},"generated":{"line":100,"column":31}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":24},"generated":{"line":100,"column":40}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":39},"generated":{"line":100,"column":41}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":24},"generated":{"line":100,"column":49}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":4},"generated":{"line":100,"column":50}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":117,"column":50},"generated":{"line":100,"column":52}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":6},"generated":{"line":101,"column":8}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":11},"generated":{"line":101,"column":13}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":6},"generated":{"line":101,"column":20}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":19},"generated":{"line":101,"column":21}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":6},"generated":{"line":101,"column":24}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":23},"generated":{"line":101,"column":25}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":6},"generated":{"line":101,"column":33}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":33},"generated":{"line":101,"column":35}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":118,"column":6},"generated":{"line":101,"column":42}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":119,"column":5},"generated":{"line":102,"column":6}},{"source":"../../../src/policies/requestPolicy.ts","name":null,"original":{"line":120,"column":3},"generated":{"line":103,"column":4}}],"sources":{"../../../src/policies/requestPolicy.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { HttpPipelineLogLevel } from \"../httpPipelineLogLevel\";\nimport { HttpPipelineLogger } from \"../httpPipelineLogger\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Creates a new RequestPolicy per-request that uses the provided nextPolicy.\n */\nexport type RequestPolicyFactory = {\n  create(nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike): RequestPolicy;\n};\n\n/**\n * The underlying structure of a request policy.\n */\nexport interface RequestPolicy {\n  /**\n   * A method that retrieves an {@link HttpOperationResponse} given a {@link WebResourceLike} describing the request to be made.\n   * @param httpRequest - {@link WebResourceLike} describing the request to be made.\n   */\n  sendRequest(httpRequest: WebResourceLike): Promise<HttpOperationResponse>;\n}\n\n/**\n * The base class from which all request policies derive.\n */\nexport abstract class BaseRequestPolicy implements RequestPolicy {\n  /**\n   * The main method to implement that manipulates a request/response.\n   */\n  protected constructor(\n    /**\n     * The next policy in the pipeline. Each policy is responsible for executing the next one if the request is to continue through the pipeline.\n     */\n    readonly _nextPolicy: RequestPolicy,\n    /**\n     * The options that can be passed to a given request policy.\n     */\n    readonly _options: RequestPolicyOptionsLike\n  ) {}\n\n  /**\n   * Sends a network request based on the given web resource.\n   * @param webResource - A {@link WebResourceLike} that describes a HTTP request to be made.\n   */\n  public abstract sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse>;\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return this._options.shouldLog(logLevel);\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meat the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    this._options.log(logLevel, message);\n  }\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport interface RequestPolicyOptionsLike {\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  shouldLog(logLevel: HttpPipelineLogLevel): boolean;\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meet the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  log(logLevel: HttpPipelineLogLevel, message: string): void;\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport class RequestPolicyOptions {\n  constructor(private _logger?: HttpPipelineLogger) {}\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return (\n      !!this._logger &&\n      logLevel !== HttpPipelineLogLevel.OFF &&\n      logLevel <= this._logger.minimumLogLevel\n    );\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meet the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    if (this._logger && this.shouldLog(logLevel)) {\n      this._logger.log(logLevel, message);\n    }\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"f3a079c222fe848e5fba3856c60edd63","cacheData":{"env":{}}}